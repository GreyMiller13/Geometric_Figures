При создании экземпляров классов Quadrangle, Square, Rectangle, Rhomb, Parallelogram, Trapeze, Triangle, Circle, Ellipse, Sphere используются конструкторы.

Ниже представлены результаты тестовых запросов.

Класс Quadrangle:
В конструктор класса принимается 4 переменные. 

Передадим: 11, 12, 13, 14.
Ошибок при создании объекта не будет. При вызове метода Area //output 132,  метода Perimeter //output 50

Передадим: 12, 13, 14, 11. 
Ошибок при создании объекта не будет. При вызове метода Area //output 156,  метода Perimeter //output 50

Из указанных выше результатов тестов видно, что порядок переменных сказывается при вычислениях метода Area и не сказывается на вычисления метода Perimeter.

Передадим: 11, 11, 11, 11.
Ошибок при создании объекта не будет. При вызове метода Area //output 121,  метода Perimeter //output 44

Передадим 0, 12, 13, 14.
Получим сообщение об ошибке Error: invalid value. Try again please. При вызове метода Area //output -1,  метода Perimeter //output -1

Передадим: 11, -2, 13, 14.
Получим сообщение об ошибке Error: invalid value. Try again please. При вызове метода Area //output -1,  метода Perimeter //output -1


Класс Square:
В конструктор класса принимается 1 переменная.

Передадим: 10.
Ошибок при создании объекта не будет. При вызове метода Area //output 100,  метода Perimeter //output 40

Передадим: -1.
Получим 4 сообщения об ошибке: Error: invalid value. Try again please. (по причине того, что переданное в конструктор значение присваивается сразу 4 переменным родительского класса Quadrilaterals) При вызове метода Area //output -1,  метода Perimeter //output -1

Передадим: 0.
Получим 4 сообщения об ошибке: Error: invalid value. Try again please. (по причине того, что переданное в конструктор значение присваивается сразу 4 переменным родительского класса Quadrilaterals) При вызове метода Area //output -1,  метода Perimeter //output -1


Класс Rectangle:
В конструктор класса принимается 2 переменные.

Передадим: 10, 11.
Ошибок при создании объекта не будет. При вызове метода Area //output 110,  метода Perimeter //output 42

Передадим 11, 10.
Ошибок при создании объекта не будет. При вызове метода Area //output 110,  метода Perimeter //output 42

Из указанных выше результатов тестов видно, что порядок переменных не сказывается при вычислениях методов Area и Perimeter.

Передадим 11, 11.
Ошибок при создании объекта не будет. При вызове метода Area //output 121,  метода Perimeter //output 44

Передадим -1, 10.
Получим 2 сообщения об ошибке: Error: invalid value. Try again please. (по причине того, что переданное в конструктор значение присваивается сразу 2 переменным родительского класса Quadrilaterals) При вызове метода Area //output -1,  метода Perimeter //output -1

Передадим 11, 0.
Получим 2 сообщения об ошибке: Error: invalid value. Try again please. (по причине того, что переданное в конструктор значение присваивается сразу 2 переменным родительского класса Quadrilaterals) При вызове метода Area //output -1,  метода Perimeter //output -1


Класс Rhomb:
В конструктор класса принимается 2 переменные.

Передадим: 11, 7.5.
Ошибок при создании объекта не будет. При вызове метода Area //output 82.5,  метода Perimeter //output 44

Передадим: 7.5, 11.
Ошибок при создании объекта не будет. При вызове метода Area //output 82.5,  метода Perimeter //output 44
В формулах расчета методов Area и Perimeter встроена проверка - высота не может быть больше длины стороны ромба. В связи с этим, значения переменных меняются местами в вычислениях.

Передадим: 7.5, -11.
Получим 1 сообщения об ошибке: Error: invalid value. Try again please. При вызове метода Area //output -1,  метода Perimeter //output -1

Передадим 0, 11.
Получим 4 сообщения об ошибке: Error: invalid value. Try again please.(по причине того, что переданное в конструктор значение присваивается сразу 4 переменным родительского класса Quadrilaterals) При вызове метода Area //output -1,  метода Perimeter //output -1


Класс Parallelogram:
В конструктор класса принимается 3 переменные.

Передадим: 10.5, 11, 8.7.
Ошибок при создании объекта не будет. При вызове метода Area //output 91.35,  метода Perimeter //output 43

Передадим: 11, 10.5, 8.7.
Ошибок при создании объекта не будет. При вызове метода Area //output 95.7,  метода Perimeter //output 43

Передадим: 8.7, 10.5, 11.
Ошибок при создании объекта не будет. При вызове метода Area //output 95.7,  метода Perimeter //output 38.4

Из указанных выше результатов тестов видно, что порядок переменных важен и сказывается при вычислениях методов Area и Perimeter.

Передадим: 8.7, 10.5, 0.
Получим 1 сообщения об ошибке: Error: invalid value. Try again please. При вызове метода Area //output -1,  метода Perimeter //output -1

Передадим: -1, 10.5, 8.7.
Получим 2 сообщения об ошибке: Error: invalid value. Try again please. (по причине того, что переданное в конструктор значение присваивается сразу 2 переменным родительского класса Quadrilaterals) При вызове метода Area //output -1,  метода Perimeter //output -1


Класс Trapeze:
В конструктор класса принимается 5 переменных.

Передадим: 11, 12, 13, 14, 8.
Ошибок при создании объекта не будет. При вызове метода Area //output 92,  метода Perimeter //output 50

Передадим: 11, 13, 12, 14, 8.
Ошибок при создании объекта не будет. При вызове метода Area //output 96,  метода Perimeter //output 50

Передадим: 11, 13, 12, 8, 14.
Ошибок при создании объекта не будет. При вызове метода Area //output 168,  метода Perimeter //output 44

Из указанных выше результатов тестов видно, что порядок переменных важен и сказывается при вычислениях методов Area и Perimeter.

Передадим: 11, 13, 12, 8, 0.
Получим 1 сообщения об ошибке: Error: invalid value. Try again please. При вызове метода Area //output -1,  метода Perimeter //output -1

Передадим: -11, 13, 12, 8, 14.
Получим 1 сообщения об ошибке: Error: invalid value. Try again please. При вызове метода Area //output -1,  метода Perimeter //output -1

Передадим: 11, -13, 12, 8, 14.
Получим 1 сообщения об ошибке: Error: invalid value. Try again please. При вызове метода Area //output -1,  метода Perimeter //output -1


Класс Triangle:
В конструктор класса принимается 4 переменные.

Передадим: 7, 8, 6, 4.5
Ошибок при создании объекта не будет. При вызове метода Area //output 15.75,  метода Perimeter //output 21

Передадим: 6, 8, 7, 4.5
Ошибок при создании объекта не будет. При вызове метода Area //output 13.5,  метода Perimeter //output 21

Передадим: 6, 4.5, 7, 8
Ошибок при создании объекта не будет. При вызове метода Area //output 24,  метода Perimeter //output 17.5

Из указанных выше результатов тестов видно, что порядок переменных важен и сказывается при вычислениях методов Area и Perimeter.

Передадим: 6, 4.5, 7, 0
Получим 1 сообщения об ошибке: Error: invalid value. Try again please. При вызове метода Area //output -1,  метода Perimeter //output -1

Передадим: 6, 4.5, -7, 8
Получим 1 сообщения об ошибке: Error: invalid value. Try again please. При вызове метода Area //output -1,  метода Perimeter //output -1


Класс Circle:
В конструктор класса принимается 1 переменная.

Передадим: 10.5
Ошибок при создании объекта не будет. При вызове метода Area //output 346.185,  метода Perimeter //output 65.94

Передадим: 0
Получим 1 сообщения об ошибке: Error: invalid value. Try again please. При вызове метода Area //output -1,  метода Perimeter //output -1

Передадим: -10
Получим 1 сообщения об ошибке: Error: invalid value. Try again please. При вызове метода Area //output -1,  метода Perimeter //output -1


Класс Ellipse:
В конструктор класса принимается 2 переменных.

Передадим: 4, 5.6.
Ошибок при создании объекта не будет. При вызове метода Area //output 70.336,  метода Perimeter //output 182.24

Передадим: 5.6, 4.
Ошибок при создании объекта не будет. При вызове метода Area //output 70.336,  метода Perimeter //output 182.24

Из указанных выше результатов тестов видно, что порядок переменных не важен и не сказывается при вычислениях методов Area и Perimeter.

Передадим: 5.6, 0.
Получим 1 сообщения об ошибке: Error: invalid value. Try again please. При вызове метода Area //output -1,  метода Perimeter //output -1

Передадим: -5.6, 0.
Получим 1 сообщения об ошибке: Error: invalid value. Try again please. При вызове метода Area //output -1,  метода Perimeter //output -1


Класс Square:
В конструктор класса принимается 1 переменная.

Передадим: 5.5
Ошибок при создании объекта не будет. При вызове метода AreaSphere //output 379.94,  метода VolumeSphere //output 694,815275

Передадим: 0
Получим 1 сообщения об ошибке: Error: invalid value. Try again please. При вызове метода AreaSphere //output -1,  метода VolumeSphere //output -1

Передадим: -5.5
Получим 1 сообщения об ошибке: Error: invalid value. Try again please. При вызове метода AreaSphere //output -1,  метода VolumeSphere //output -1